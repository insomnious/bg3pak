//------------------------------------------------
//--- 010 Editor v15.0 Binary Template
//
//      File: 
//   Authors: Simon Davies (insomnious) & Nexus Mods
//   Version: 1.0.0
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

LittleEndian();

typedef struct {
    char magic[4] <style=sHeading1Accent>;    //0x4C53504B
    uint version;
    uint64 fileListOffset;
    uint fileListSize;
    byte flags;
    byte priority;
    byte md5[16];
    if(version > 15) ushort numParts;    
} HEADER;

typedef struct {
    string name;
    uint64 offsetInFile;
    uint64 sizeOnDisk;
    uint64 uncompressedSize;
    uint archivePart;
    uint flags;
    uint crc;
    uint unknown;    
} FILE_ENTRY_15;

typedef struct {
    string name;
    uint offsetInFile1;
    ushort offsetInFile2;
    byte archivePart;
    byte flags;
    uint sizeOnDisk;
    uint uncompressedSize;    
} FILE_ENTRY_18;

local int64 fileSize = FileSize();

// actual file

HEADER header <style=sHeading1>;

// Printf("FTell() = %d\n", FTell());

byte fileData[header.fileListOffset - sizeof(header)] <style=sHeading2>;

// FSeek(header.fileListOffset);

uint numOfFiles <style=sHeading3Accent>;
uint compressedSize <style=sHeading3Accent>;
byte compressedFileList[compressedSize]  <style=sHeading3>;